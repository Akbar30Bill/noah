#ifndef NOAH_LINUX_ERRNO_H
#define NOAH_LINUX_ERRNO_H

#include <errno.h>

#define LINUX_ERRNOS \
  COMMON( EPERM,		1)			\
  COMMON( ENOENT,		2)			\
  COMMON( ESRCH,		3)			\
  COMMON( EINTR,		4)			\
  COMMON( EIO,			5)			\
  COMMON( ENXIO,		6)			\
  COMMON( E2BIG,		7)			\
  COMMON( ENOEXEC,		8)			\
  COMMON( EBADF,		9)			\
  COMMON( ECHILD,		10)			\
  COMMON( EAGAIN,		11)			\
  COMMON( ENOMEM,		12)			\
  COMMON( EACCES,		13)			\
  COMMON( EFAULT,		14)			\
  COMMON( ENOTBLK,		15)			\
  COMMON( EBUSY,		16)			\
  COMMON( EEXIST,		17)			\
  COMMON( EXDEV,		18)			\
  COMMON( ENODEV,		19)			\
  COMMON( ENOTDIR,		20)			\
  COMMON( EISDIR,		21)			\
  COMMON( EINVAL,		22)			\
  COMMON( ENFILE,		23)			\
  COMMON( EMFILE,		24)			\
  COMMON( ENOTTY,		25)			\
  COMMON( ETXTBSY,		26)			\
  COMMON( EFBIG,		27)			\
  COMMON( ENOSPC,		28)			\
  COMMON( ESPIPE,		29)			\
  COMMON( EROFS,		30)			\
  COMMON( EMLINK,		31)			\
  COMMON( EPIPE,		32)			\
  COMMON( EDOM,			33)			\
  COMMON( ERANGE,		34)			\
  COMMON( EDEADLK,		35)			\
  COMMON( ENAMETOOLONG,		36)			\
  COMMON( ENOLCK,		37)			\
  COMMON( ENOSYS,		38)			\
  COMMON( ENOTEMPTY,		39)			\
  COMMON( ELOOP,		40)			\
  COMMON( EWOULDBLOCK,    	LINUX_EAGAIN)		\
  COMMON( ENOMSG,		42)			\
  COMMON( EIDRM,		43)			\
  LINUX ( ECHRNG,		44)			\
  LINUX ( EL2NSYNC,		45)			\
  LINUX ( EL3HLT,		46)			\
  LINUX ( EL3RST,		47)			\
  LINUX ( ELNRNG,		48)			\
  LINUX ( EUNATCH,		49)			\
  LINUX ( ENOCSI,		50)			\
  LINUX ( EL2HLT,		51)			\
  LINUX ( EBADE,		52)			\
  LINUX ( EBADR,		53)			\
  LINUX ( EXFULL,		54)			\
  LINUX ( ENOANO,		55)			\
  LINUX ( EBADRQC,		56)			\
  LINUX ( EBADSLT,		57)			\
  LINUX ( EDEADLOCK,		LINUX_EDEADLK)		\
  LINUX ( EBFONT,		59)			\
  COMMON( ENOSTR,		60)			\
  COMMON( ENODATA,		61)			\
  COMMON( ETIME,		62)			\
  COMMON( ENOSR,		63)			\
  LINUX ( ENONET,		64)			\
  LINUX ( ENOPKG,		65)			\
  COMMON( EREMOTE,		66)			\
  COMMON( ENOLINK,		67)			\
  LINUX ( EADV,			68)			\
  LINUX ( ESRMNT,		69)			\
  LINUX ( ECOMM,		70)			\
  COMMON( EPROTO,		71)			\
  COMMON( EMULTIHOP,		72)			\
  LINUX ( EDOTDOT,		73)			\
  COMMON( EBADMSG,		74)			\
  COMMON( EOVERFLOW,		75)			\
  LINUX ( ENOTUNIQ,		76)			\
  LINUX ( EBADFD,		77)			\
  LINUX ( EREMCHG,		78)			\
  LINUX ( ELIBACC,		79)			\
  LINUX ( ELIBBAD,		80)			\
  LINUX ( ELIBSCN,		81)			\
  LINUX ( ELIBMAX,		82)			\
  LINUX ( ELIBEXEC,		83)			\
  COMMON( EILSEQ,		84)			\
  LINUX ( ERESTART,		85)			\
  LINUX ( ESTRPIPE,		86)			\
  COMMON( EUSERS,		87)			\
  COMMON( ENOTSOCK,		88)			\
  COMMON( EDESTADDRREQ,		89)			\
  COMMON( EMSGSIZE,		90)			\
  COMMON( EPROTOTYPE,		91)			\
  COMMON( ENOPROTOOPT,		92)			\
  COMMON( EPROTONOSUPPORT,	93)			\
  COMMON( ESOCKTNOSUPPORT,	94)			\
  COMMON( EOPNOTSUPP,		95)			\
  COMMON( ENOTSUP,		LINUX_EOPNOTSUPP)	\
  COMMON( EPFNOSUPPORT,		96)			\
  COMMON( EAFNOSUPPORT,		97)			\
  COMMON( EADDRINUSE,		98)			\
  COMMON( EADDRNOTAVAIL,	99)			\
  COMMON( ENETDOWN,		100)			\
  COMMON( ENETUNREACH,		101)			\
  COMMON( ENETRESET,		102)			\
  COMMON( ECONNABORTED,		103)			\
  COMMON( ECONNRESET,		104)			\
  COMMON( ENOBUFS,		105)			\
  COMMON( EISCONN,		106)			\
  COMMON( ENOTCONN,		107)			\
  COMMON( ESHUTDOWN,		108)			\
  COMMON( ETOOMANYREFS,		109)			\
  COMMON( ETIMEDOUT,		110)			\
  COMMON( ECONNREFUSED,		111)			\
  COMMON( EHOSTDOWN,		112)			\
  COMMON( EHOSTUNREACH,		113)			\
  COMMON( EALREADY,		114)			\
  COMMON( EINPROGRESS,		115)			\
  COMMON( ESTALE,		116)			\
  LINUX ( EUCLEAN,		117)			\
  LINUX ( ENOTNAM,		118)			\
  LINUX ( ENAVAIL,		119)			\
  LINUX ( EISNAM,		120)			\
  LINUX ( EREMOTEIO,		121)			\
  COMMON( EDQUOT,		122)			\
  LINUX ( ENOMEDIUM,		123)			\
  LINUX ( EMEDIUMTYPE,		124)			\
  COMMON( ECANCELED,		125)			\
  LINUX ( ENOKEY,		126)			\
  LINUX ( EKEYEXPIRED,		127)			\
  LINUX ( EKEYREVOKED,		128)			\
  LINUX ( EKEYREJECTED,		129)			\
  COMMON( EOWNERDEAD,		130)			\
  COMMON( ENOTRECOVERABLE,	131)			\
  LINUX ( ERFKILL,		132)			\
  LINUX ( EHWPOISON,		133)			\

#define DARWIN_ADDITION \
  DARWIN( EFTYPE,	LINUX_EPERM)			\
  DARWIN( EAUTH,	LINUX_EPERM)			\
  DARWIN( ENEEDAUTH,	LINUX_EPERM)			\
  DARWIN( EBADEXEC,	LINUX_ENOEXEC)			\
  DARWIN( EBADARCH,	LINUX_ENOEXEC)			\
  DARWIN( EBADMACHO,	LINUX_ENOEXEC)			\
  DARWIN( ENOATTR,	LINUX_ENODATA)			\
  DARWIN( ENOPOLICY,	LINUX_EPERM)			\
  DARWIN( EBADRPC,	LINUX_EPERM)			\


#define COMMON(errno_name, val) LINUX_ ## errno_name = (val),
#define LINUX(errno_name, val) COMMON(errno_name, val)
enum l_errno {
  LINUX_ERRNOS
};
#undef COMMON
#undef LINUX

int darwin_to_linux_errno(int eval);

#endif
